{
  "id": "permutations",
  "title": "Permutations",
  "difficulty": "Medium",
  "description": "Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.",
  "completed": false,
  "topic": "recursion",
  "timeEstimate": "25 min",
  "companies": ["Amazon", "Microsoft", "Google", "Facebook"],
  "examples": [
    {
      "input": "nums = [1,2,3]",
      "output": "[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]"
    },
    {
      "input": "nums = [0,1]",
      "output": "[[0,1],[1,0]]"
    },
    {
      "input": "nums = [1]",
      "output": "[[1]]"
    }
  ],
  "constraints": [
    "1 <= nums.length <= 6",
    "-10 <= nums[i] <= 10",
    "All the integers of nums are unique."
  ],
  "starterCode": "function permute(nums) {\n    // Your code here\n    // Return an array of arrays, where each inner array is a permutation\n    \n}",
  "hints": [
    "Think about building permutations recursively by choosing one element at a time.",
    "Use backtracking to explore all possible arrangements.",
    "Keep track of which elements have been used in the current permutation."
  ]
}