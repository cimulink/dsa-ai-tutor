{
  "id": "reverse-linked-list",
  "title": "Reverse Linked List",
  "difficulty": "Easy",
  "description": "Given the head of a singly linked list, reverse the list, and return the reversed list.",
  "completed": false,
  "topic": "linked-lists",
  "timeEstimate": "20 min",
  "companies": ["Microsoft", "Amazon", "Apple", "Google"],
  "examples": [
    {
      "input": "head = [1,2,3,4,5]",
      "output": "[5,4,3,2,1]"
    },
    {
      "input": "head = [1,2]",
      "output": "[2,1]"
    },
    {
      "input": "head = []",
      "output": "[]",
      "explanation": "An empty list reversed is still an empty list"
    }
  ],
  "constraints": [
    "The number of nodes in the list is in the range [0, 5000].",
    "-5000 <= Node.val <= 5000"
  ],
  "starterCode": "function reverseList(head) {\n    // Your code here\n    \n}",
  "hints": [
    "Think about how to change the direction of pointers in a linked list.",
    "Consider using three pointers: previous, current, and next.",
    "Iterate through the list and reverse the links as you go."
  ]
}