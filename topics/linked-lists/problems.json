[
  {
    "id": "reverse-linked-list",
    "title": "Reverse Linked List",
    "difficulty": "Easy",
    "description": "Given the head of a singly linked list, reverse the list, and return the reversed list.",
    "completed": false,
    "topic": "linked-lists",
    "timeEstimate": "20 min",
    "companies": ["Microsoft", "Amazon", "Apple", "Google"],
    "examples": [
      {
        "input": "head = [1,2,3,4,5]",
        "output": "[5,4,3,2,1]"
      },
      {
        "input": "head = [1,2]",
        "output": "[2,1]"
      },
      {
        "input": "head = []",
        "output": "[]",
        "explanation": "An empty list reversed is still an empty list"
      }
    ],
    "constraints": [
      "The number of nodes in the list is in the range [0, 5000].",
      "-5000 <= Node.val <= 5000"
    ],
    "starterCode": "function reverseList(head) {\n    // Your code here\n    \n}",
    "hints": [
      "Think about how to change the direction of pointers in a linked list.",
      "Consider using three pointers: previous, current, and next.",
      "Iterate through the list and reverse the links as you go."
    ]
  },
  {
    "id": "merge-two-lists",
    "title": "Merge Two Sorted Lists",
    "difficulty": "Easy",
    "description": "You are given the heads of two sorted linked lists list1 and list2. Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists. Return the head of the merged linked list.",
    "completed": false,
    "topic": "linked-lists",
    "timeEstimate": "20 min",
    "companies": ["Amazon", "Microsoft", "Adobe", "Google"],
    "examples": [
      {
        "input": "list1 = [1,2,4], list2 = [1,3,4]",
        "output": "[1,1,2,3,4,4]"
      },
      {
        "input": "list1 = [], list2 = []",
        "output": "[]"
      },
      {
        "input": "list1 = [], list2 = [0]",
        "output": "[0]"
      }
    ],
    "constraints": [
      "The number of nodes in both lists is in the range [0, 50].",
      "-100 <= Node.val <= 100",
      "Both list1 and list2 are sorted in non-decreasing order."
    ],
    "starterCode": "function mergeTwoLists(list1, list2) {\n    // Your code here\n    \n}",
    "hints": [
      "Use a dummy head to simplify the logic.",
      "Compare the values of the current nodes from both lists.",
      "Attach the smaller node to the result list and advance the corresponding pointer."
    ]
  }
]