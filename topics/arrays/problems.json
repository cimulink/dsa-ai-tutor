[
  {
    "id": "two-sum",
    "title": "Two Sum",
    "difficulty": "Easy",
    "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.",
    "completed": false,
    "topic": "arrays",
    "timeEstimate": "15 min",
    "companies": ["Google", "Facebook", "Amazon", "Microsoft"],
    "examples": [
      {
        "input": "nums = [2,7,11,15], target = 9",
        "output": "[0,1]",
        "explanation": "Because nums[0] + nums[1] == 9, we return [0, 1]."
      },
      {
        "input": "nums = [3,2,4], target = 6",
        "output": "[1,2]"
      },
      {
        "input": "nums = [3,3], target = 6",
        "output": "[0,1]"
      }
    ],
    "constraints": [
      "2 ≤ nums.length ≤ 10⁴",
      "-10⁹ ≤ nums[i] ≤ 10⁹",
      "-10⁹ ≤ target ≤ 10⁹",
      "Only one valid answer exists."
    ],
    "starterCode": "function twoSum(nums, target) {\n    // Your code here\n    \n}",
    "hints": [
      "Think about what data structure can help you look up values quickly.",
      "Consider using a hash map to store numbers you've seen and their indices.",
      "For each number, check if (target - current number) exists in your hash map."
    ]
  },
  {
    "id": "merge-intervals",
    "title": "Merge Intervals",
    "difficulty": "Medium",
    "description": "Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.",
    "completed": false,
    "topic": "arrays",
    "timeEstimate": "25 min",
    "companies": ["Microsoft", "Amazon", "Google"],
    "examples": [
      {
        "input": "intervals = [[1,3],[2,6],[8,10],[15,18]]",
        "output": "[[1,6],[8,10],[15,18]]",
        "explanation": "Since intervals [1,3] and [2,6] overlap, merge them into [1,6]."
      },
      {
        "input": "intervals = [[1,4],[4,5]]",
        "output": "[[1,5]]",
        "explanation": "Intervals [1,4] and [4,5] are considered overlapping."
      }
    ],
    "constraints": [
      "1 ≤ intervals.length ≤ 10⁴",
      "intervals[i].length == 2",
      "0 ≤ starti ≤ endi ≤ 10⁴"
    ],
    "starterCode": "function merge(intervals) {\n    // Your code here\n    \n}",
    "hints": [
      "Consider sorting the intervals first by their start time.",
      "Think about when two intervals overlap - when does the start of one interval fall within another?",
      "You can merge intervals by updating the end time of the previous interval."
    ]
  },
  {
    "id": "maximum-subarray",
    "title": "Maximum Subarray",
    "difficulty": "Medium",
    "description": "Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. A subarray is a contiguous part of an array.",
    "completed": false,
    "topic": "arrays",
    "timeEstimate": "25 min",
    "companies": ["LinkedIn", "Amazon", "Microsoft", "Apple"],
    "examples": [
      {
        "input": "nums = [-2,1,-3,4,-1,2,1,-5,4]",
        "output": "6",
        "explanation": "The subarray [4,-1,2,1] has the largest sum 6."
      },
      {
        "input": "nums = [1]",
        "output": "1",
        "explanation": "The subarray [1] has the largest sum 1."
      },
      {
        "input": "nums = [5,4,-1,7,8]",
        "output": "23",
        "explanation": "The subarray [5,4,-1,7,8] has the largest sum 23."
      }
    ],
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^4 <= nums[i] <= 10^4"
    ],
    "starterCode": "function maxSubArray(nums) {\n    // Your code here\n    \n}",
    "hints": [
      "This is a classic problem that can be solved with Kadane's algorithm.",
      "Keep track of the maximum sum ending at the current position.",
      "At each position, decide whether to extend the existing subarray or start a new one."
    ]
  }
]